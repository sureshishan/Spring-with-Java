package com.suresh.inheritance.overriding;

public class InheritanceOverridingDemo {

	public static void main(String[] args) {
		Person emp = new Employee();
		emp.test();
	}
}

class Person {
	public void test() {
		System.out.println("Person's test().");
	}
}

class Employee extends Person {
	public void test() {
		System.out.println("Employee's test().");
	}
}

class PermanenetEmployee extends Employee

/*
 * If the overriding is initiated and the rules are not satisfied then it is a
 * compile time error
 * 
 * Compiler will not check to which object it is referring to but to the data
 * type of the reference
 * 
 * Compiler will never check what is the Object only it checks the type of the
 * reference.
 * 
 * because of dynamic binding polymorphism occurs.
 * 
 * 
 * In Java without inheritance can i have polymorphism? No. without inheritance
 * there is no concept of polimorphism. and it happens only when Dynamic binding
 * happens
 */
